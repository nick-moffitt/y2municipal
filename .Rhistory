!stringr::str_detect(.data$name, '^s_'),
!stringr::str_detect(.data$name, '^md_'),
!stringr::str_detect(.data$name, '^m_'),
!stringr::str_detect(.data$name, '^cs_'),
!stringr::str_detect(.data$name, '^sl_'),
!stringr::str_detect(.data$name, '^n_'),
!stringr::str_detect(.data$name, '^r_'),
!stringr::str_detect(.data$name, '^oe_'),
!stringr::str_detect(.data$name, 'TEXT$'),
!stringr::str_detect(.data$name, weight_char)
) %>%
dplyr::select(.data$name) %>%
purrr::as_vector()
leftovers_1string <- paste(leftover_vars, collapse = ', ')
if (length(leftover_vars) >= 1) {
warning(
stringr::str_c(
"The following variables from your dataset were not included in the topline:\n",
leftovers_1string
)
)
}
}
topline(responses, weight)
# Checking installation
devtools::install_github('nick-moffitt/y2municipal')
# Set up the working directory to make package
library(tidyverse)
library(devtools)
library(roxygen2)
# Process documentation
setwd('~/Documents/GitHub/y2municipal//')
document()
check()
# Checking installation
devtools::install_github('nick-moffitt/y2municipal')
DATA_PATH <- '~/Dropbox (Y2 Analytics)/Y2 Analytics Team Folder/Projects/Kaysville/Data/'
responses <- read_rds(str_c(DATA_PATH, 'Kaysville City Community Survey Weighted Geocoded Data.rds'))
library(tidyverse)
DATA_PATH <- '~/Dropbox (Y2 Analytics)/Y2 Analytics Team Folder/Projects/Kaysville/Data/'
responses <- read_rds(str_c(DATA_PATH, 'Kaysville City Community Survey Weighted Geocoded Data.rds'))
DATA_PATH <- '~/Desktop/'
topline(municipal_data)
tidyselect::starts_with('s_'),
tidyselect::starts_with('md_'),
tidyselect::starts_with('m_'),
tidyselect::starts_with('cs_'),
tidyselect::starts_with('sl_'),
tidyselect::starts_with('n_'),
tidyselect::starts_with('r_'),
tidyselect::starts_with('oe_'),
tidyselect::ends_with('_TEXT')
topline(municipal_data)
library(y2municipal)
DATA_PATH <- '~/Desktop/'
topline(municipal_data)
names <- taking_names
library(orderlabel)
names <- taking_names()
View(names)
library(tidyverse)
library(y2municipal)
library(orderlabel)
DATA_PATH <- '~/Dropbox (Y2 Analytics)/Y2 Analytics Team Folder/Projects/Kaysville/Data/'
responses <- read_rds(str_c(DATA_PATH, 'Kaysville City Community Survey Weighted Geocoded Data.rds'))
names <- taking_names()
DATA_PATH <- '~/Desktop/'
topline(municipal_data)
topline(municipal_data, weight)
responses %>% topline(weight)
library(tidyverse)
library(y2municipal)
library(orderlabel)
# DATA_PATH <- '~/Dropbox (Y2 Analytics)/Y2 Analytics Team Folder/Projects/Kaysville/Data/'
# responses <- read_rds(str_c(DATA_PATH, 'Kaysville City Community Survey Weighted Geocoded Data.rds'))
# names <- taking_names()
DATA_PATH <- '~/Desktop/'
topline(municipal_data)
rm(DATA_PATH)
topline(municipal_data)
devtools::install_github('nick-moffitt/y2artisan')
version
library(y2municipal)
names(municipal_data)
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- median(dataset$Duration__in_seconds_) / 60
loi_minutes_trimmed <- mean(dataset$Duration__in_seconds_, trim = 0.1) / 60
LOI <- str_c(
"Median LOI: ", loi_minutes_untrimmed, ' minutes',
'\n Median LOI trimmed:', loi_minutes_trimmed, ' minutes'
)
}
length_of_interview(municipal_data)
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- median(dataset$Duration__in_seconds_) / 60
loi_minutes_trimmed <- median(dataset$Duration__in_seconds_, trim = 0.1) / 60
LOI <- stringr::str_c(
"Median LOI: ", loi_minutes_untrimmed, ' minutes',
'\n Median LOI trimmed:', loi_minutes_trimmed, ' minutes'
)
}
length_of_interview(municipal_data)
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- median(dataset$Duration__in_seconds_) / 60
loi_minutes_trimmed <- median(dataset$Duration__in_seconds_, trim = 0.1) / 60
LOI <- stringr::str_c(
"Median LOI: ", loi_minutes_untrimmed, ' minutes',
'/n Median LOI trimmed:', loi_minutes_trimmed, ' minutes'
)
}
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- mean(dataset$Duration__in_seconds_) / 60
loi_minutes_trimmed <- mean(dataset$Duration__in_seconds_, trim = 0.1) / 60
LOI <- stringr::str_c(
"Median LOI: ", loi_minutes_untrimmed, ' minutes',
'\n Median LOI trimmed:', loi_minutes_trimmed, ' minutes'
)
}
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- mean(dataset$Duration__in_seconds_) / 60 %>% round(1)
loi_minutes_trimmed <- mean(dataset$Duration__in_seconds_, trim = 0.1) / 60  %>% round(1)
LOI <- stringr::str_c(
"Median LOI: ", loi_minutes_untrimmed, ' minutes',
'\n Median LOI trimmed:', loi_minutes_trimmed, ' minutes'
)
}
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
LOI <- stringr::str_c(
"Median LOI: ", loi_minutes_untrimmed, ' minutes',
'\n Median LOI trimmed:', loi_minutes_trimmed, ' minutes'
)
}
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
LOI <- cat(loi_minutes_untrimmed_char, loi_minutes_trimmed_char)
}
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
LOI <- cat(loi_minutes_untrimmed_char, loi_minutes_trimmed_char)
}
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
LOI <- cat(loi_minutes_untrimmed_char, loi_minutes_trimmed_char, '\n')
}
length_of_interview(municipal_data) %>% print()
?cat
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
LOI <- cat(loi_minutes_untrimmed_char, loi_minutes_trimmed_char, sep = '\n')
}
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
LOI <- stringr::str_c(loi_minutes_untrimmed_char, loi_minutes_trimmed_char, sep = '\n')
}
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
LOI <- cat(loi_minutes_untrimmed_char, loi_minutes_trimmed_char, sep = '\n')
}
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
LOI <- writeLines(loi_minutes_untrimmed_char, loi_minutes_trimmed_char)
}
length_of_interview(municipal_data) %>% print()
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
LOI <- writeLines(loi_minutes_untrimmed_char, loi_minutes_trimmed_char)
}
length_of_interview(municipal_data)
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
writeLines(loi_minutes_untrimmed_char, loi_minutes_trimmed_char)
}
length_of_interview(municipal_data)
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
cat(loi_minutes_untrimmed_char, loi_minutes_trimmed_char)
}
length_of_interview(municipal_data)
# LOI
length_of_interview <- function(dataset) {
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed:', loi_minutes_trimmed, ' minutes')
cat(loi_minutes_untrimmed_char, loi_minutes_trimmed_char, sep = '\n')
}
length_of_interview(municipal_data)
names(municipal_data)
# Field dates
start_date <- min(municipal_data$StartDate)
end_date <- min(municipal_data$EndDate)
field_dates_char <- stringr::str_c("Fielded: ", start_date, end_date)
library(lubridate)
# Field dates
start_date <- min(municipal_data$StartDate) %>% month()
?month
# Field dates
start_date <- min(municipal_data$StartDate) %>% month(label = TRUE)
min(municipal_data$StartDate) %>% month(label = TRUE)
# Field dates
start_month <- min(municipal_data$StartDate) %>% month(label = TRUE)
start_day <- min(municipal_data$StartDate) %>% day()
?day
# Field dates
start_month <- min(municipal_data$StartDate) %>% month(label = TRUE)
start_day <- min(municipal_data$StartDate) %>% day()
end_month <- min(municipal_data$EndDate) %>% month(label = TRUE)
end_day <- min(municipal_data$EndDate) %>% day()
field_dates_char <- stringr::str_c(
"Fielded:",
start_month,
start_day,
"-",
end_month,
end_day,
sep = ' '
)
count(dataset)
count(municipal_data)
dplyr::count(municipal_data)
# Private functions -------------------------------------------------------
moe_function <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population-1) * sample_size / (population - sample_size)
1.96*.05 / sqrt(nadj)
}
moe_function(municipal_data, 30000)
# Private functions -------------------------------------------------------
moe_function <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population-1) * sample_size / (population - sample_size)
moe <- 1.96*.05 / sqrt(nadj)
moe_char <- str_c('MOE: +/- ', moe * 100)
}
moe_function(municipal_data, 30000)
# Private functions -------------------------------------------------------
moe_function <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population-1) * sample_size / (population - sample_size)
moe <- 1.96*.05 / sqrt(nadj)
moe_char <- stringr::str_c('MOE: +/- ', moe * 100)
}
moe_function(municipal_data, 30000)
moe_function(municipal_data, 30000) %>% print()
# Private functions -------------------------------------------------------
moe_function <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population-1) * sample_size / (population - sample_size)
moe <- (1.96*.05 / sqrt(nadj)) round(3)
moe_char <- stringr::str_c('MOE: +/- ', moe * 100)
}
moe_function(municipal_data, 30000) %>% print()
# Private functions -------------------------------------------------------
moe_function <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population-1) * sample_size / (population - sample_size)
moe <- (1.96*.05 / sqrt(nadj)) %>% round(3)
moe_char <- stringr::str_c('MOE: +/- ', moe * 100)
}
moe_function(municipal_data, 30000) %>% print()
# Private functions -------------------------------------------------------
moe_function <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population - 1) * sample_size / (population - sample_size)
moe <- 1.96 / sqrt(nadj)
moe_char <- stringr::str_c('MOE: +/- ', moe * 100)
}
moe_function(municipal_data, 30000)
moe_function(municipal_data, 30000) %>% print()
# Private functions -------------------------------------------------------
moe_function <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population - 1) * sample_size / (population - sample_size)
moe <- (1.96 *.5) / sqrt(nadj)
moe_char <- stringr::str_c('MOE: +/- ', moe * 100)
}
moe_function(municipal_data, 30000) %>% print()
# Private functions -------------------------------------------------------
moe_function <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population - 1) * sample_size / (population - sample_size)
moe <- ((1.96 *.5) / sqrt(nadj)) round(3)
moe_char <- stringr::str_c('MOE: +/- ', moe * 100)
}
moe_function(municipal_data, 30000) %>% print()
# Private functions -------------------------------------------------------
moe_function <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population - 1) * sample_size / (population - sample_size)
moe <- ((1.96 *.5) / sqrt(nadj)) %>% round(3)
moe_char <- stringr::str_c('MOE: +/- ', moe * 100)
}
moe_function(municipal_data, 30000) %>% print()
moe_function(municipal_data, 1000) %>% print()
moe_function(municipal_data, 200) %>% print()
# Private functions -------------------------------------------------------
moe_function <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population - 1) * sample_size / (population - sample_size)
moe <- ((1.96 *.5) / sqrt(nadj)) %>% round(3)
moe_char <- stringr::str_c('MOE: +/- ', moe * 100)
}
# Private functions -------------------------------------------------------
get_moe <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population - 1) * sample_size / (population - sample_size)
moe <- ((1.96 *.5) / sqrt(nadj)) %>% round(3)
moe_char <- stringr::str_c('MOE: +/- ', moe * 100)
}
get_field_dates <- function(dataset) {
start_month <- min(dataset$StartDate) %>% month(label = TRUE)
start_day <- min(dataset$StartDate) %>% day()
end_month <- min(dataset$EndDate) %>% month(label = TRUE)
end_day <- min(dataset$EndDate) %>% day()
field_dates_char <- stringr::str_c(
"Fielded:",
start_month,
start_day,
"-",
end_month,
end_day,
sep = ' '
)
}
methodology <- function(dataset) {
# LOI
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed: ', loi_minutes_trimmed, ' minutes')
# Field dates
field_dates_char <- get_field_dates(dataset)
# MOE
moe_char <- get_moe(dataset, population)
# Print it all
cat(
loi_minutes_untrimmed_char,
loi_minutes_trimmed_char,
field_dates_char,
sep = '\n'
)
}
# Private functions -------------------------------------------------------
get_moe <- function(dataset, population) {
sample_size <- dplyr::count(municipal_data)
nadj <- (population - 1) * sample_size / (population - sample_size)
moe <- ((1.96 *.5) / sqrt(nadj)) %>% round(3)
moe_char <- stringr::str_c('MOE: +/- ', moe * 100)
}
get_field_dates <- function(dataset) {
start_month <- min(dataset$StartDate) %>% month(label = TRUE)
start_day <- min(dataset$StartDate) %>% day()
end_month <- min(dataset$EndDate) %>% month(label = TRUE)
end_day <- min(dataset$EndDate) %>% day()
field_dates_char <- stringr::str_c(
"Fielded:",
start_month,
start_day,
"-",
end_month,
end_day,
sep = ' '
)
}
methodology <- function(dataset) {
# LOI
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed: ', loi_minutes_trimmed, ' minutes')
# Field dates
field_dates_char <- get_field_dates(dataset)
# MOE
moe_char <- get_moe(dataset, population)
# Print it all
cat(
loi_minutes_untrimmed_char,
loi_minutes_trimmed_char,
field_dates_char,
moe_chart,
sep = '\n'
)
}
methodology(municipal_data)
methodology <- function(dataset, population) {
# LOI
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed: ', loi_minutes_trimmed, ' minutes')
# Field dates
field_dates_char <- get_field_dates(dataset)
# MOE
moe_char <- get_moe(dataset, population)
# Print it all
cat(
loi_minutes_untrimmed_char,
loi_minutes_trimmed_char,
field_dates_char,
moe_chart,
sep = '\n'
)
}
methodology(municipal_data, 30000)
methodology <- function(dataset, population) {
# LOI
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Median LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Median LOI trimmed: ', loi_minutes_trimmed, ' minutes')
# Field dates
field_dates_char <- get_field_dates(dataset)
# MOE
moe_char <- get_moe(dataset, population)
# Print it all
cat(
loi_minutes_untrimmed_char,
loi_minutes_trimmed_char,
field_dates_char,
moe_char,
sep = '\n'
)
}
methodology(municipal_data, 30000)
methodology <- function(dataset, population) {
# LOI
loi_minutes_untrimmed <- (mean(dataset$Duration__in_seconds_) / 60) %>% round(1)
loi_minutes_trimmed <- (mean(dataset$Duration__in_seconds_, trim = 0.1) / 60)  %>% round(1)
loi_minutes_untrimmed_char <- stringr::str_c('Mean LOI: ', loi_minutes_untrimmed, ' minutes')
loi_minutes_trimmed_char <- stringr::str_c('Mean LOI trimmed: ', loi_minutes_trimmed, ' minutes')
# Field dates
field_dates_char <- get_field_dates(dataset)
# MOE
moe_char <- get_moe(dataset, population)
# Print it all
cat(
loi_minutes_untrimmed_char,
loi_minutes_trimmed_char,
field_dates_char,
moe_char,
sep = '\n'
)
}
methodology(municipal_data, 30000)
?round
?round
# Set up the working directory to make package
library(tidyverse)
library(devtools)
library(roxygen2)
# Process documentation
setwd('~/Documents/GitHub/y2municipal/')
document()
version
